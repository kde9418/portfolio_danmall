<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 커넥션 풀 기능 제공 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- 서버 배포용으로 사용
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:XE" />
		 -->
		<!-- log4jdbc-log4j2 설정 -->
		<!-- 개발용으로 사용. sql 결과값이 디테일하기 때문에 성능이 떨어짐 -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE" />
		
		<property name="username" value="danmall" />
		<property name="password" value="danmall" />
		
		<!-- 배포용
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@mydemoserver.co2sb8ifrasi.ap-northeast-2.rds.amazonaws.com:1521:orcl" />
		
		<property name="username" value="daeun" />
		<property name="password" value="ekdms" />-->
		
	</bean>
	
	<!-- constructor-arg엘리먼트는 생성자메서드를 가리킴 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- Mybatis에는 SQLSession, SQLSessionFactory 이 2가지 핵심개체 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- xml mapper파일을 참조하는 설정 구문이 없다. mapper interface가 xml mapper파일을 내부적으로 참조하는 규칙이 있기 때문에. -->
	</bean>
	
	<!-- id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 구문 설정이 안되어있음 -->
	<!-- xml mapper파일의 sql구문을 실행하는 기능을 mapper interface 메서드에서 담당 -->
	
	<!-- JavaMailSenderImpl클래스를 bean객체로 설정시 메일서버의 정보를 구성해야 한다. Gmail계정정보를 사용(보안설정 낮게 ) -->
	<!-- https://myaccount.google.com/lesssecureapps -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	  <property name="host" value="smtp.gmail.com" /> <!-- 메일 서버마다 요청주소가 다르다. -->
	  <property name="port" value="587" />
	  <property name="username" value="abc123@gmail.com" />
	  <property name="password" value="aaaa" />
	  <property name="javaMailProperties">
	  <props>
	    <prop key="mail.smtp.auth">true</prop>
	    <prop key="mail.smtp.starttls.enable">true</prop>
	  </props>
	  </property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:annotation-driven />
	
	<mybatis-spring:scan base-package="com.danmall.mapper"/>
	
	<context:component-scan base-package="com.danmall.service" />
	
</beans>
